// Generated from d:\Itay\Documents\Coding\Go\src\Aurora\Parser\Aurora.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 24, 153,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 3, 2, 3, 2, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9,
	3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3,
	14, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 6, 17, 88, 10, 17,
	13, 17, 14, 17, 89, 3, 18, 3, 18, 7, 18, 94, 10, 18, 12, 18, 14, 18, 97,
	11, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 7, 19, 104, 10, 19, 12, 19,
	14, 19, 107, 11, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 6,
	23, 116, 10, 23, 13, 23, 14, 23, 117, 3, 23, 3, 23, 3, 24, 3, 24, 5, 24,
	124, 10, 24, 3, 24, 5, 24, 127, 10, 24, 3, 25, 3, 25, 3, 25, 3, 25, 7,
	25, 133, 10, 25, 12, 25, 14, 25, 136, 11, 25, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 7, 26, 147, 10, 26, 12, 26, 14, 26,
	150, 11, 26, 3, 26, 3, 26, 3, 134, 2, 27, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7,
	13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31,
	17, 33, 18, 35, 19, 37, 20, 39, 2, 41, 2, 43, 2, 45, 21, 47, 22, 49, 23,
	51, 24, 3, 2, 7, 3, 2, 36, 36, 5, 2, 67, 92, 97, 97, 99, 124, 3, 2, 50,
	59, 4, 2, 11, 11, 34, 34, 4, 2, 12, 12, 15, 15, 2, 159, 2, 3, 3, 2, 2,
	2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2,
	2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2,
	2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3,
	2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35,
	3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2,
	49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 3, 53, 3, 2, 2, 2, 5, 55, 3, 2, 2, 2,
	7, 57, 3, 2, 2, 2, 9, 59, 3, 2, 2, 2, 11, 61, 3, 2, 2, 2, 13, 63, 3, 2,
	2, 2, 15, 65, 3, 2, 2, 2, 17, 67, 3, 2, 2, 2, 19, 69, 3, 2, 2, 2, 21, 71,
	3, 2, 2, 2, 23, 73, 3, 2, 2, 2, 25, 75, 3, 2, 2, 2, 27, 77, 3, 2, 2, 2,
	29, 80, 3, 2, 2, 2, 31, 83, 3, 2, 2, 2, 33, 87, 3, 2, 2, 2, 35, 91, 3,
	2, 2, 2, 37, 100, 3, 2, 2, 2, 39, 108, 3, 2, 2, 2, 41, 110, 3, 2, 2, 2,
	43, 112, 3, 2, 2, 2, 45, 115, 3, 2, 2, 2, 47, 126, 3, 2, 2, 2, 49, 128,
	3, 2, 2, 2, 51, 142, 3, 2, 2, 2, 53, 54, 7, 61, 2, 2, 54, 4, 3, 2, 2, 2,
	55, 56, 7, 42, 2, 2, 56, 6, 3, 2, 2, 2, 57, 58, 7, 43, 2, 2, 58, 8, 3,
	2, 2, 2, 59, 60, 7, 48, 2, 2, 60, 10, 3, 2, 2, 2, 61, 62, 7, 46, 2, 2,
	62, 12, 3, 2, 2, 2, 63, 64, 7, 47, 2, 2, 64, 14, 3, 2, 2, 2, 65, 66, 7,
	45, 2, 2, 66, 16, 3, 2, 2, 2, 67, 68, 7, 35, 2, 2, 68, 18, 3, 2, 2, 2,
	69, 70, 7, 44, 2, 2, 70, 20, 3, 2, 2, 2, 71, 72, 7, 40, 2, 2, 72, 22, 3,
	2, 2, 2, 73, 74, 7, 49, 2, 2, 74, 24, 3, 2, 2, 2, 75, 76, 7, 39, 2, 2,
	76, 26, 3, 2, 2, 2, 77, 78, 7, 40, 2, 2, 78, 79, 7, 40, 2, 2, 79, 28, 3,
	2, 2, 2, 80, 81, 7, 126, 2, 2, 81, 82, 7, 126, 2, 2, 82, 30, 3, 2, 2, 2,
	83, 84, 7, 63, 2, 2, 84, 32, 3, 2, 2, 2, 85, 88, 5, 43, 22, 2, 86, 88,
	7, 97, 2, 2, 87, 85, 3, 2, 2, 2, 87, 86, 3, 2, 2, 2, 88, 89, 3, 2, 2, 2,
	89, 87, 3, 2, 2, 2, 89, 90, 3, 2, 2, 2, 90, 34, 3, 2, 2, 2, 91, 95, 7,
	36, 2, 2, 92, 94, 10, 2, 2, 2, 93, 92, 3, 2, 2, 2, 94, 97, 3, 2, 2, 2,
	95, 93, 3, 2, 2, 2, 95, 96, 3, 2, 2, 2, 96, 98, 3, 2, 2, 2, 97, 95, 3,
	2, 2, 2, 98, 99, 7, 36, 2, 2, 99, 36, 3, 2, 2, 2, 100, 105, 5, 39, 20,
	2, 101, 104, 5, 39, 20, 2, 102, 104, 5, 43, 22, 2, 103, 101, 3, 2, 2, 2,
	103, 102, 3, 2, 2, 2, 104, 107, 3, 2, 2, 2, 105, 103, 3, 2, 2, 2, 105,
	106, 3, 2, 2, 2, 106, 38, 3, 2, 2, 2, 107, 105, 3, 2, 2, 2, 108, 109, 5,
	41, 21, 2, 109, 40, 3, 2, 2, 2, 110, 111, 9, 3, 2, 2, 111, 42, 3, 2, 2,
	2, 112, 113, 9, 4, 2, 2, 113, 44, 3, 2, 2, 2, 114, 116, 9, 5, 2, 2, 115,
	114, 3, 2, 2, 2, 116, 117, 3, 2, 2, 2, 117, 115, 3, 2, 2, 2, 117, 118,
	3, 2, 2, 2, 118, 119, 3, 2, 2, 2, 119, 120, 8, 23, 2, 2, 120, 46, 3, 2,
	2, 2, 121, 123, 7, 15, 2, 2, 122, 124, 7, 12, 2, 2, 123, 122, 3, 2, 2,
	2, 123, 124, 3, 2, 2, 2, 124, 127, 3, 2, 2, 2, 125, 127, 7, 12, 2, 2, 126,
	121, 3, 2, 2, 2, 126, 125, 3, 2, 2, 2, 127, 48, 3, 2, 2, 2, 128, 129, 7,
	49, 2, 2, 129, 130, 7, 44, 2, 2, 130, 134, 3, 2, 2, 2, 131, 133, 11, 2,
	2, 2, 132, 131, 3, 2, 2, 2, 133, 136, 3, 2, 2, 2, 134, 135, 3, 2, 2, 2,
	134, 132, 3, 2, 2, 2, 135, 137, 3, 2, 2, 2, 136, 134, 3, 2, 2, 2, 137,
	138, 7, 44, 2, 2, 138, 139, 7, 49, 2, 2, 139, 140, 3, 2, 2, 2, 140, 141,
	8, 25, 2, 2, 141, 50, 3, 2, 2, 2, 142, 143, 7, 49, 2, 2, 143, 144, 7, 49,
	2, 2, 144, 148, 3, 2, 2, 2, 145, 147, 10, 6, 2, 2, 146, 145, 3, 2, 2, 2,
	147, 150, 3, 2, 2, 2, 148, 146, 3, 2, 2, 2, 148, 149, 3, 2, 2, 2, 149,
	151, 3, 2, 2, 2, 150, 148, 3, 2, 2, 2, 151, 152, 8, 26, 2, 2, 152, 52,
	3, 2, 2, 2, 13, 2, 87, 89, 95, 103, 105, 117, 123, 126, 134, 148, 3, 8,
	2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "';'", "'('", "')'", "'.'", "','", "'-'", "'+'", "'!'", "'*'", "'&'",
	"'/'", "'%'", "'&&'", "'||'", "'='",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "IntegerLiteral",
	"StringLiteral", "Identifier", "Whitespace", "Newline", "BlockComment",
	"LineComment",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "IntegerLiteral",
	"StringLiteral", "Identifier", "IdentifierNondigit", "Nondigit", "Digit",
	"Whitespace", "Newline", "BlockComment", "LineComment",
}

type AuroraLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewAuroraLexer(input antlr.CharStream) *AuroraLexer {

	l := new(AuroraLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Aurora.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// AuroraLexer tokens.
const (
	AuroraLexerT__0           = 1
	AuroraLexerT__1           = 2
	AuroraLexerT__2           = 3
	AuroraLexerT__3           = 4
	AuroraLexerT__4           = 5
	AuroraLexerT__5           = 6
	AuroraLexerT__6           = 7
	AuroraLexerT__7           = 8
	AuroraLexerT__8           = 9
	AuroraLexerT__9           = 10
	AuroraLexerT__10          = 11
	AuroraLexerT__11          = 12
	AuroraLexerT__12          = 13
	AuroraLexerT__13          = 14
	AuroraLexerT__14          = 15
	AuroraLexerIntegerLiteral = 16
	AuroraLexerStringLiteral  = 17
	AuroraLexerIdentifier     = 18
	AuroraLexerWhitespace     = 19
	AuroraLexerNewline        = 20
	AuroraLexerBlockComment   = 21
	AuroraLexerLineComment    = 22
)
